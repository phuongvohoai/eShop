<MudDialog ContentStyle="width: 400px;">
    <DialogContent>
        <MudTextField @bind-Value="CatalogType.Name" For="@(() => CatalogType.Name)" Label="Type Name"
                      Variant="Variant.Outlined" Margin="Margin.Dense" ShrinkLabel="true" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public required CatalogTypeDto CatalogType { get; set; }

    [Inject]
    private ICatalogTypeService CatalogTypeService { get; set; } = default!;

    [Inject]
    private ISnackbar Snackbar { get; set; } = default!;

    private async Task Submit()
    {
        CatalogTypeDto? result;
        if (CatalogType.Id == 0)
        {
            result = await CatalogTypeService.CreateAsync(CatalogType);
        }
        else
        {
            result = await CatalogTypeService.UpdateAsync(CatalogType);
        }

        if (result == null)
        {
            Snackbar.Add("An error occurred while saving the type.", Severity.Error);
        }

        MudDialog.Close(DialogResult.Ok(result));
    }

    private void Cancel() => MudDialog.Cancel();
}